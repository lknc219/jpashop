웹 계층 개발

홈 화면과 레이아웃
회원 등록
회원 목록 조회
상품 등록
상품 목록
상품 수정
변경 감지와 병합(merge)
상품 주문
주문 목록 검색, 취소

====================================================================================

홈 화면과 레이아웃

Controller 패키지 생성 후
HomeController 클래스 생성

Logger log = LoggerFactory.getLogger(getClass()); 를 선언해서 로그를 사용할 수 있지만
lombok을 사용해서 @Slf4j 를 애너테이션으로 입력하면 대체 가능하다.

home화면을 갈수있는 controller를 만들고 화면 구성 위주의 수업이 아니기 때문에 참고 파일의 
home.html, header.html, bodyHeader.html, footer.html 을 붙여넣어준다.

getBootstrap.com 에 접속해서 최신버전의 부트스트랩을 다운받아준다.
다운받은 부트스트랩의 압축을 푼 후 css, js 폴더를 복사해서 스프링의 resource -> static 폴더에 붙여넣어준다.
빌드를 다시하거나, 동기화 등을 시켜 css와 js파일을 intellij에 인식시켜준다.
jumbotron-narrow.css 파일 생성 후 참고파일에서 붙여넣기 해줬다.

====================================================================================

회원 등록
폼 객체를 사용해서 화면 계층과 서비스 계층을 명확하게 분리한다.
강의 상 javax.validation이 스프링 부트 버전에 자동으로 주입되어 있지만 최신버전에서는 빠졌기 때문에 gradle.build 에 직접 추가해서 사용해줬다.

    @GetMapping("/members/new")
    public String createForm(Model model) {
        model.addAttribute("memberForm", new MemberForm());
        return "members/createMemberForm";
    }
    
addAttribute 에서 빈 Memberform 을 가져가는 이유는 MemberForm 에 설정해둔 validation 등을 활용하기 위해
해당 view 화면은 복붙으로 thymeleaf 템플릿으로 만들어준다.

회원가입 submit 버튼을 누르면 post방식의 같은 맵핑 이름인 /members/new 로 맵핑해준다.
컨트롤러의 매개변수 넣는 부분에 @Valid 를 넣어주면 MemberForm 에서 설정해준 @NotEmpty 같은 것을 활용할 수 있다.

====================================================================================


====================================================================================


====================================================================================


====================================================================================


====================================================================================