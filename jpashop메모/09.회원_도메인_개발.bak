회원 도메인 개발

구현기능
	회원 등록
	회원 목록 조회

순서
	회원 엔티티 코드 다시 보기
	회원 리포지토리 개발
	회원 서비스 개발
	회원 기능 테스트

===================================================================================

Repository 개발

@Repository로 리포지토리 컴포넌트 등록을 해주고
EntityManager는 스프링에서 지원하는 @Autowired로 주입해준다
em.persist(member)
em.find(Member.class,id) 
em.createQuery("select m from Member m",Member.class)
	.getResultList();
em.createQuery("select m from Member m where m.name = :name",Member.class)
	.setParameter("name",name) //파라미터를 맵핑해준다.
	.getResultList();

등과 같은 메서드로 리포지토리 메서드를 만들어준다.

===================================================================================

Service 개발

@Service로 서비스 컴포넌트 등록
@Transactional(readOnly = true) 조회하는 메서드가 많을 시 기본으로 등록해주고 조회가 아닌 메서드에 @Transactional을 붙여줌으로 우선작용하게 설정할 수 있다. (기본은false)
리포지토리를 @Autowired 해서 메소드를 이용해서 Service메소드를 만든다.

필드를 인잭션의 종류
@Autowired - 스프링 Bean으로 등록된 클래스를 주입한다.
생성자를 하나 만들어둔다 - 스프링에서 생성자가 하나만있으면 알아서 생성자 인잭션을 해준다.
@AllArgsConstructor - 필드를 가지고 알아서 생성자 인잭션을 만들어준다 (생성자 만들필요 x) (Lombok에서 지원)
필드를 final로 하고 @RequiredArgsConstructor - final로 설정된 필드만을 가지고 생성자 인잭션을 만들어준다.   -- 요즘 좋은 방법 (Lombok에서 지원)

리포지토리인 EntityManager는 @PersistenceContext 로 인잭션 해줘야하지만 스프링 데이터 JPQ 에서 @Autowired 로 인잭션하게 지원해주어서 위의 방법으로 인잭션해줄 수 있다.


